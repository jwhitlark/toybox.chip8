* table
Only uses variables X, Y, N*
|----+----+------+-----------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| T? | I? | op   | Name                        | Desc.                                                                                                                                                                                                                                                                                                                                                                                                                           |
|----+----+------+-----------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|    | N  | 0NNN |                             | Calls RCA 1802 program at address NNN. Not necessary for most ROMs.                                                                                                                                                                                                                                                                                                                                                             |
|    | Y  | 00E0 | clear-screen                | Clears the screen.                                                                                                                                                                                                                                                                                                                                                                                                              |
| Y  | Y  | 00EE | return                      | Returns from a subroutine.                                                                                                                                                                                                                                                                                                                                                                                                      |
| Y  | Y  | 1NNN | jump                        | Jumps to address NNN.                                                                                                                                                                                                                                                                                                                                                                                                           |
| Y  | Y  | 2NNN | call-sub                    | Calls subroutine at NNN.                                                                                                                                                                                                                                                                                                                                                                                                        |
| Y  | Y  | 3XNN | skip-if                     | Skips the next instruction if VX equals NN.                                                                                                                                                                                                                                                                                                                                                                                     |
| Y  | Y  | 4XNN | skip-if-not                 | Skips the next instruction if VX doesn't equal NN.                                                                                                                                                                                                                                                                                                                                                                              |
|    | Y  | 5XY0 |                             | Skips the next instruction if VX equals VY.                                                                                                                                                                                                                                                                                                                                                                                     |
| Y  | Y  | 6XNN | set-vx                      | Sets VX to NN.                                                                                                                                                                                                                                                                                                                                                                                                                  |
| Y  | Y  | 7XNN | add-n                       | Adds NN to VX.                                                                                                                                                                                                                                                                                                                                                                                                                  |
|    | Y  | 8XY0 | set-vx-to-vy                | Sets VX to the value of VY.                                                                                                                                                                                                                                                                                                                                                                                                     |
|    | Y  | 8XY1 |                             | Sets VX to VX or VY.                                                                                                                                                                                                                                                                                                                                                                                                            |
| Y  | Y  | 8XY2 | set-vx-to-vx-and-vy         | Sets VX to VX and VY.                                                                                                                                                                                                                                                                                                                                                                                                           |
|    | Y  | 8XY3 |                             | Sets VX to VX xor VY.                                                                                                                                                                                                                                                                                                                                                                                                           |
| Y  | Y  | 8XY4 | add-vy-to-vx                | Adds VY to VX. VF is set to 1 when there's a carry, and to 0 when there isn't.                                                                                                                                                                                                                                                                                                                                                  |
| Y  | Y  | 8XY5 | sub-vy-from-vx              | VY is subtracted from VX. VF is set to 0 when there's a borrow, and 1 when there isn't.                                                                                                                                                                                                                                                                                                                                         |
|    |    | 8XY6 |                             | Shifts VX right by one. VF is set to the value of the least significant bit of VX before the shift.[2]                                                                                                                                                                                                                                                                                                                          |
|    |    | 8XY7 |                             | Sets VX to VY minus VX. VF is set to 0 when there's a borrow, and 1 when there isn't.                                                                                                                                                                                                                                                                                                                                           |
|    |    | 8XYE |                             | Shifts VX left by one. VF is set to the value of the most significant bit of VX before the shift.[2]                                                                                                                                                                                                                                                                                                                            |
|    | Y  | 9XY0 |                             | Skips the next instruction if VX doesn't equal VY.                                                                                                                                                                                                                                                                                                                                                                              |
| Y  | Y  | ANNN | set-i                       | Sets I to the address NNN.                                                                                                                                                                                                                                                                                                                                                                                                      |
|    | Y  | BNNN |                             | Jumps to the address NNN plus V0.                                                                                                                                                                                                                                                                                                                                                                                               |
|    | Y  | CXNN |                             | Sets VX to the result of a bitwise and operation on a random number and NN.                                                                                                                                                                                                                                                                                                                                                     |
|    | Y  | DXYN | Draw-sprite                 | Sprites stored in memory at location in index register (I), 8bits wide. Wraps around the screen. If when drawn, clears a pixel, register VF is set to 1 otherwise it is zero. All drawing is XOR drawing (i.e. it toggles the screen pixels). Sprites are drawn starting at position VX, VY. N is the number of 8bit rows that need to be drawn. If N is greater than 1, second line continues at position VX, VY+1, and so on. |
|    | Y  | EX9E |                             | Skips the next instruction if the key stored in VX is pressed.                                                                                                                                                                                                                                                                                                                                                                  |
|    | s  | EXA1 |                             | Skips the next instruction if the key stored in VX isn't pressed.                                                                                                                                                                                                                                                                                                                                                               |
| Y  | Y  | FX07 | set-vx-to-delay             | Sets VX to the value of the delay timer.                                                                                                                                                                                                                                                                                                                                                                                        |
|    | s  | FX0A |                             | A key press is awaited, and then stored in VX.                                                                                                                                                                                                                                                                                                                                                                                  |
| Y  | Y  | FX15 | set-delay-timer             | Sets the delay timer to VX.                                                                                                                                                                                                                                                                                                                                                                                                     |
|    | Y  | FX18 |                             | Sets the sound timer to VX.                                                                                                                                                                                                                                                                                                                                                                                                     |
|    | Y  | FX1E |                             | Adds VX to I.[3]                                                                                                                                                                                                                                                                                                                                                                                                                |
|    | Y  | FX29 |                             | Sets I to the location of the sprite for the character in VX. Characters 0-F (in hexadecimal) are represented by a 4x5 font.                                                                                                                                                                                                                                                                                                    |
| Y  | Y  | FX33 | store-binary-representation | Stores the Binary-coded decimal representation of VX, with the most significant of three digits at the address in I, the middle digit at I plus 1, and the least significant digit at I plus 2. (In other words, take the decimal representation of VX, place the hundreds digit in memory at location in I, the tens digit at location I+1, and the ones digit at location I+2.)                                               |
|    | Y  | FX55 |                             | Stores V0 to VX (including VX) in memory starting at address I.[4]                                                                                                                                                                                                                                                                                                                                                              |
| Y  | Y  | FX65 | fill-v-from-memory          | Fills V0 to VX (including VX) with values from memory starting at address I.[4]                                                                                                                                                                                                                                                                                                                                                 |
|----+----+------+-----------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|


2. On the original interpreter, the value of VY is shifted, and the
   result is stored into VX. On current implementations, Y is ignored.

3. VF is set to 1 when range overflow (I+VX>0xFFF), and 0 when there
   isn't. This is undocumented feature of the CHIP-8 and used by
   Spacefight 2091! game.

4. On the original interpreter, when the operation is done,
   I=I+X+1. On current implementations, I is left unchanged.


Sprites stored in memory at location in index register (I), 8bits
wide. Wraps around the screen. If when drawn, clears a pixel, register
VF is set to 1 otherwise it is zero. All drawing is XOR drawing
(i.e. it toggles the screen pixels). Sprites are drawn starting at
position VX, VY. N is the number of 8bit rows that need to be
drawn. If N is greater than 1, second line continues at position VX,
VY+1, and so on.


Keypad                   Keyboard
+-+-+-+-+                +-+-+-+-+
|1|2|3|C|                |1|2|3|4|
+-+-+-+-+                +-+-+-+-+
|4|5|6|D|                |Q|W|E|R|
+-+-+-+-+       =>       +-+-+-+-+
|7|8|9|E|                |A|S|D|F|
+-+-+-+-+                +-+-+-+-+
|A|0|B|F|                |Z|X|C|V|
+-+-+-+-+                +-+-+-+-+


1 - 49 - 1
2 - 50 - 2
3 - 51 - 3
4 - 52 - C
q - 81 - 4
w - 87 - 5
e - 69 - 6
r - 82 - D
a - 65 - 7
s - 83 - 8
d - 68 - 9
f - 70 - E
z - 90 - A
x - 88 - 0
c - 67 - B
v - 86 - F
